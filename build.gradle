apply plugin: 'java'
apply plugin: 'groovy'
apply plugin: 'idea'
apply plugin: 'maven'

configurations {
    source {
        extendsFrom archives
    }
}

repositories {
    mavenCentral()
}

dependencies {
    compile gradleApi()
    compile localGroovy()
    compile 'info.cukes:cucumber-core:1.1.5'
    testCompile 'junit:junit:4.11'
}

project.tasks.uploadArchives.dependsOn 'test'

task jarSrc(type: Jar) {
    classifier = 'sources'
    baseName = "${project.name}-src"
    from sourceSets.main.java.srcDirs
    from sourceSets.main.groovy.srcDirs
}

artifacts {
    archives(jarSrc) {
        type = 'sources'
    }
}

uploadArchives {
    uploadDescriptor = true
    repositories {
        add (new org.apache.ivy.plugins.resolver.FileSystemResolver()) {
            name = 'localIvyRepository'
            addArtifactPattern "${projectDir}/repo/[organisation]/[module]/[revision]/[artifact]-[revision](.[ext])"
            addIvyPattern "${projectDir}/repo/[organisation]/[module]/[revision]/ivy.xml"
        }
        mavenDeployer {
          repository(url: "file://${projectDir}/repo")
        }
    }
    // this is hacky, but Gradle doesn't yet provide a way to publish non-archive objects
    doLast {
        copy {
            from "${projectDir}/src/cucumberinit"
            into "${projectDir}/repo/gradle-cucumber-plugin/gradle-cucumber-plugin/${version}/"
        }
    }
}

task createWrapper(type: Wrapper) {
    gradleVersion = '1.7'
}
